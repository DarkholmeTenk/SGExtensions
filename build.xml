<project name="SGExtensions" default="main">
<property environment="env"/>
<!-- Properties -->

<property name="build.dir" value="/home/jenkins/builds"/>
<property name="src.dir" value="/root/.jenkins/workspace/SGExtensions"/>
<property name="apis.dir" value="/home/jenkins/apis"/>
<property name="resources.dir" value="${src.dir}/resources"/>

<property name="download.dir" value="/home/jenkins/download"/>

<property name="classes.dir" value="${build.dir}/classes"/>
<property name="jar.dir" value="${src.dir}/jar"/>

<property name="mcp.dir" value="/home/jenkins/mcp"/>
<property name="forge.dir" value="${mcp.dir}/forge"/>

<property name="mcpsrc.dir" value="${mcp.dir}/src"/>

<property name="mc.version" value="1.4.7"/>
<property name="forge.version" value="6.6.0.523"/>
<property name="project.version" value="0.4"/>

<property name="forge.name" value="minecraftforge-src-${mc.version}-${forge.version}.zip"/>

<available property="forge-exists" file="${download.dir}/${forge.name}"/>

<condition property="out-of-date">
<not>
<and>
<available file="${download.dir}/${forge.name}"/>
<available file="${mcpsrc.dir}"/>
</and>
</not>
</condition>

<mkdir dir="${download.dir}"/>

<!-- Targets -->

<!-- Clear build directory -->
<target name="clean">
<delete dir="${classes.dir}"/>
<delete dir="${jar.dir}"/>
</target>

<!-- Set full version -->
<target name="initialize-version" depends="version-provided,version-not-provided">
<property name="project.version.full" value="${project.version}.${build.number}"/>
</target>

<!-- Set unknown build number -->
<target name="version-not-provided" unless="env.BUILD_NUMBER">
<property name="build.number" value="unknown"/>
</target>

<!-- Set build number from environment -->
<target name="version-provided" if="env.BUILD_NUMBER">
<property name="build.number" value="${env.BUILD_NUMBER}"/>
</target>


<!-- Fix executable permissions -->
<chmod dir="${mcp.dir}" perm="ugo+rx" includes="**.sh"/>



<target name="compile" depends="clean">

<delete dir="${classes.dir}"/>
<mkdir dir="${classes.dir}"/>

<!-- Copy sources -->
<copy todir="${mcpsrc.dir}/minecraft">
<fileset dir="${src.dir}"/>
<fileset dir="${apis.dir}/buildcraft"/>
<fileset dir="${apis.dir}/dan200"/>
<fileset dir="${apis.dir}/ic2"/>
<filterset>
<filter token="VERSION" value="${project.version.full}" />
<filter token="BUILD_NUMBER" value="${build.number}" />
</filterset>
</copy>

<!-- Recompile -->

<exec dir="${mcp.dir}" executable="sh" osfamily="unix">
<arg value="recompile.sh"/>
</exec>

<!-- Check for failure -->
<fail message="MCP failed to build">
<condition>
<resourcecontains resource="${mcp.dir}/logs/client_compile.log" substring="error:"/>
</condition>
</fail>

<!-- Reobfuscate -->
<exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
<arg line="/c reobfuscate.bat"/>
</exec>

<exec dir="${mcp.dir}" executable="sh" osfamily="unix">
<arg value="reobfuscate.sh"/>
</exec>

<!-- Copy classes -->
<copy todir="${classes.dir}">
<fileset dir="${mcp.dir}/reobf/minecraft"/>
</copy>

<!-- Copy resources -->
<copy todir="${classes.dir}/resources">
<fileset dir="${resources.dir}">
<exclude name="build.xml"/>
<exclude name="*.psd"/>
</fileset>
</copy>

<!-- Reset src dir to post-forge-install state -->
<delete dir="${mcpsrc.dir}/minecraft/sgextensions"/>
<delete dir="${mcpsrc.dir}/minecraft/buildcraft"/>
<delete dir="${mcpsrc.dir}/minecraft/ic2"/>
<delete dir="${mcpsrc.dir}/minecraft/dan200"/>

</target>

<!-- Package the compiled files -->
<target name="package" depends="compile,initialize-version">

<delete dir="${jar.dir}"/>
<mkdir dir="${jar.dir}"/>
<!--<jar destfile="${jar.dir}/${ant.project.name}-${mc.version}-${project.version.full}.jar" basedir="${classes.dir}"/>-->
	<jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}"/>
</target>

<!-- Default target to run -->
<target name="main" depends="package"/>

</project>